plugins {
    id 'com.android.library'
    id 'maven-publish'
}

version = "1.0.12"
group = "com.test"

android {
    namespace "com.github.lzyzsd.library"
    compileSdkVersion 31
//    buildToolsVersion "21.1.2"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 31
        versionCode 1
        versionName version
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
//    lint {
//        baseline = file("lint-baseline.xml")
//    }
}

dependencies {
    compileOnly 'com.tencent.tbs:tbssdk:44286'
}

/*task makeJar(type: Copy) {
//    delete 'build/flame.jar' //删除之前的旧jar包
    from('build/intermediates/packaged-classes/release/') //从这个目录下取出默认jar包
    from fileTree(dir: 'src/main', includes: ['assets/**'])
    into('build/') //将jar包输出到指定目录下
    include('classes.jar')
    rename('classes.jar', 'JsBridge.jar') //自定义jar包的名字
}
makeJar.dependsOn(build)*/


/*def zipFile = file('build/intermediates/packaged-classes/release/classes.jar')
task makeJar(type: Jar) {
    archiveName = 'JsBridge.jar'
    //如果之前存在，则先删除
    delete 'build/libs/JsBridge.jar'
    //设置拷贝的文件
    from zipTree(zipFile)
    from fileTree(dir: 'src/main', includes: ['assets/**'])
}
makeJar.dependsOn(build)*/



/*
def siteUrl = 'https://github.com/lzyzsd/JsBridge'
def gitUrl = 'https://github.com/lzyzsd/JsBridge.git'
group = "com.github.lzyzsd.jsbridge"
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())*/
